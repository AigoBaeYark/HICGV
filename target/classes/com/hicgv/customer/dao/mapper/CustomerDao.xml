<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper 주소는 패키지.Dao인터페이스이름 -->
<mapper namespace="com.hicgv.customer.dao.CustomerDao">
<!--회원가입 -->
	<insert id="joinCustomer" parameterType="CustomerDto">
	INSERT INTO HICGV_CUSTOMER
		VALUES(HICGV_customer_seq.nextval,#{id},#{password},#{name},
		#{phone_number},#{nickname},#{gender},#{date_birth},#{location},sysdate,#{email},#{grade},#{question},#{answer})
	</insert>
	<select id="loginCheckId" resultType="String">
		SELECT ID FROM
		HICGV_CUSTOMER WHERE ID = #{id}
	</select>
	<select id="loginCheckPw" parameterType="Map" resultType="CustomerDto">
		SELECT * FROM
		HICGV_CUSTOMER
		WHERE ID = (SELECT ID FROM HICGV_CUSTOMER WHERE ID =
		#{id })
		AND PASSWORD = #{password}
	</select>
	<!--회원id를 찾아 myCGV에 출력 -->
	<!--컨트롤러에 있는 추상메서드와 같게 id를 만들어야함 -->
	<!--myCGV 회원정보 보여주기 -->
	<!-- <select id="myCGV" resultType="com.hicgv.customer.dto.CustomerDto">
		SELECT
		ID,PASSWORD,NAME,PHONE_NUMBER,NICKNAME,GENDER,LOCATION,CREATE_AT,EMAIL,QUESTION,ANSWER
		FROM HICGV_CUSTOMER
		WHERE ID LIKE #{id}
	</select> -->
	<select id="myCGV" parameterType="Map" resultType="CustomerDto">
		SELECT *
		FROM HICGV_CUSTOMER
		WHERE ID LIKE #{id }
	</select>
	<!--회원정보 수정(업데이트) -->
	<update id="modify">
		UPDATE hicgv_customer
		SET
		PASSWORD=#{param2},PHONE_NUMBER=#{param3},NICKNAME=#{param4},GENDER=#{param5},
		DATE_BIRTH=#{param6},LOCATION=#{param7},EMAIL=#{param8},QUESTION=#{param9},ANSWER=#{param10}
		WHERE ID LIKE #{param1}
	</update>
	
	<!-- <insert id="insertCustomer" parameterType="CustomerDto">
		INSERT INTO HICGV_CUSTOMER(user_id, ID) VALUES(hicgv_customer_seq.nextval,#{id})
	</insert> -->
	<!-- <insert id="join">
		INSERT INTO HICGV_CUSTOMER
		VALUES(HICGV_customer_seq.nextval,#{param1},#{param2},#{param3},#{param4},
		#{param5},#{param6},#{param7},#{param8},current_timestamp,#{param9},#{param10},#{param11})
	</insert> -->
	<!--회원탈퇴 -->
	<delete id="delete">
		DELETE FROM hicgv_customer WHERE id like #{param1}
		AND PASSWORD LIKE #{param2}
	</delete>
	<select id="getEmail" resultType="String">
		SELECT EMAIL FROM
		HICGV_CUSTOMER WHERE ID=#{param1}
	</select>
	<!--비밀번호 찾기 / 아이디 이메일 입력하고 해당 질문 뿌려주기 -->
	<select id="forgetPw" resultType="String">
		SELECT QUESTION FROM
		HICGV_CUSTOMER WHERE ID=#{param1} AND EMAIL=#{param2}
	</select>
	<select id="getQuestion" resultType="String">
		SELECT QUESTION FROM
		HICGV_CUSTOMER WHERE ID=#{param1} AND EMAIL=#{param2}
	</select>
	<!--답을 입력하고 질문이 같은지 비교 -->
	<select id="getAnswer" resultType="String">
		SELECT ANSWER FROM
		HICGV_CUSTOMER WHERE ID =
		(SELECT ID FROM HICGV_CUSTOMER WHERE
		ANSWER=#{param1})
	</select>
	<update id="resetPw">
		UPDATE hicgv_customer
		SET PASSWORD=#{param2} WHERE ID
		LIKE #{param1}
	</update>
	<!-- 아이디 찾기 -->
	<select id="getPhone_number" resultType="String">
		SELECT PHONE_NUMBER FROM
		HICGV_CUSTOMER WHERE
		PHONE_NUMBER= #{param1}

	</select>
	<select id="forgetId" resultType="String">
		SELECT ID FROM HICGV_CUSTOMER
		WHERE PHONE_NUMBER
		=(SELECT PHONE_NUMBER FROM HICGV_CUSTOMER WHERE
		PHONE_NUMBER= #{param1})
		AND DATE_BIRTH = #{param2}

	</select>
	<select id="name" resultType="String">
		SELECT
		NAME
		FROM HICGV_CUSTOMER
		WHERE ID=#{param1} AND PASSWORD=#{param2}
	</select>
	<select id="nickname" resultType="String">
		SELECT
		NICKNAME
		FROM HICGV_CUSTOMER
		WHERE ID=#{param1} AND PASSWORD=#{param2}

	</select>
	<select id="grade" resultType="String">
		SELECT
		GRADE
		FROM HICGV_CUSTOMER
		WHERE ID=#{param1} AND PASSWORD=#{param2}

	</select>
	<!-- <select id="img" resultType="String">
		SELECT
		PROFILE_IMGE
		FROM HICGV_CUSTOMER
		WHERE ID=#{param1} AND PASSWORD=#{param2}

	</select>  -->
	
	<select id="getCustomerDto" resultType="CustomerDto">
		SELECT *
		FROM HICGV_CUSTOMER
		WHERE ID LIKE #{param1}
	</select>
	
	
	
</mapper>
